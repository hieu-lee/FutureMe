@inject FutureMeClient Http
@inject SessionData Session
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>
<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

@code {
    protected override async Task OnInitializedAsync()
    {
        Session.Key = await localStorage.GetItemAsync<string>("FutureMeKey");
        if (!string.IsNullOrWhiteSpace(Session.Key))
        {
            try
            {
                Session.MyAccount = await Http.UserClient.GetFromJsonAsync<Account>($"api/Accounts/my-account/{Session.Key}");
            }
            catch (Exception)
            {
                await localStorage.SetItemAsync<string>("FutureMeKey", string.Empty);
                Session.ClearData();
            }
        }
    }
}
