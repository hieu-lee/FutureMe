@inject FutureMeClient Http

<MudCard Style="max-width: 60ch; padding: 2ch; margin: 0 auto;">
    <div class="header" style="display: flex">
        <MudAvatar Style="width: 43px; height: 43px" Color="Color.Primary">@FirstLetter</MudAvatar>
        <div style="margin-left: 1ch;">
            <MudText Typo="Typo.subtitle2">@FeedbackItem.Username</MudText>
            <MudRating Size="Size.Small" SelectedValue="FeedbackItem.Rate" MaxValue="5" DisableRipple="true" ReadOnly="true"/>
        </div>
    </div>
    <div class="content" style="margin: 1ch 0;">
        <MudText Style="white-space: pre-line" Typo="Typo.body1">@FeedbackItem.Content</MudText>
        <MudText Typo="Typo.caption">@FeedbackItem.PostTime.ToLocalTime()</MudText>
    </div>
    <hr />
    <div class="likes d-flex">
        <MudIconButton Icon="@LikeIcon" @onclick="LikesChanged" />
        <div class="d-flex align-items-center">
            <MudText Style="margin-left: 0.5ch;" Typo="Typo.subtitle2">@FeedbackItem.Likes</MudText>
        </div>
    </div>
</MudCard>

@code {
    [Parameter]
    public Feedback FeedbackItem
    {
        get => _FeedbackItem;
        set
        {
            if (_FeedbackItem == value) return;
            _FeedbackItem = value;
            FeedbackItemChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<Feedback> FeedbackItemChanged { get; set; }
    [Parameter]
    public bool Liked { get; set; } = false;

    Feedback _FeedbackItem;
    string FirstLetter => FeedbackItem.Username[0].ToString().ToUpper();
    string LikeIcon => (Liked) ? Icons.Material.Filled.Favorite : Icons.Material.Filled.FavoriteBorder;

    private async Task LikesChanged()
    {
        Liked = !Liked;
        StateHasChanged();
        if (Liked)
        {
            FeedbackItem.Likes++;
            await Http.LetterAndFeedbackClient.PutAsJsonAsync<Feedback>("api/Feedback/feedback-increment-likes", FeedbackItem);
        }
        else
        {
            FeedbackItem.Likes--;
            await Http.LetterAndFeedbackClient.PutAsJsonAsync<Feedback>("api/Feedback/feedback-decrement-likes", FeedbackItem);
        }
    }
}
