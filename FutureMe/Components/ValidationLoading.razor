@inject FutureMeClient Http
@inject NavigationManager NavManager

<MudContainer MaxWidth="MaxWidth.Large">
    @if (loading)
    {
        <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
        <MudText Typo="Typo.h4" Style="text-align: center;">Chúng tôi đang xác thực email của bạn</MudText>
    }
    else
    {
        if (!success)
        {
            <MudText Typo="Typo.h4" Style="text-align: center;">Phiên xác thực của bạn đã hết hạn, vui lòng thử lại!</MudText>
        }
        else
        {
            <MudText Typo="Typo.h4" Style="text-align: center;">@SuccessMessage</MudText>
        }
    }
</MudContainer>

@code {
    [Parameter]
    public string Key { get; set; }
    [Parameter]
    public bool SignUp { get; set; } = false;
    bool loading = true;
    bool success = false;
    string SuccessMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (SignUp)
        {
            SuccessMessage = "Xác thực email và tạo tài khoản mới thành công!";
        }
        else
        {
            SuccessMessage = "Xác thực email thành công, thư của bạn đã được gửi!";
        }
        var res = await Http.UserClient.GetStringAsync($"api/Emails/validate/{Key}");
        if (res == "Xác thực email thành công")
        {
            success = true;
        }
        else
        {
            success = false;
        }
        loading = false;
    }
}
