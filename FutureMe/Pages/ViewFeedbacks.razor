@page "/feedbacks"
@inject FutureMeClient Http

<div style="background: #7467EF; color: #ffffff; padding: 5ch 0;">
    <MudContainer MaxWidth="MaxWidth.Large">
        @if (loading)
        {
            <ul style="list-style:none;">
                @for (int i = 0; i < 10; i++)
                {
                    <li style="margin: 3ch 0;">
                        <LoadingFeedback />
                    </li>
                }
            </ul>
        }
        else
        {
            <ul style="list-style: none;">
                <Virtualize Items="feedbacks" Context="feedback">
                    <li style="margin: 3ch 0;">
                        <FeedbackCard @bind-FeedbackItem="feedback" />
                    </li>
                </Virtualize>
            </ul>
        }
    </MudContainer>
</div>


@code {
    bool loading = true;
    HashSet<Feedback> feedbacks = new();

    protected override async Task OnInitializedAsync()
    {
        feedbacks = await Http.LetterAndFeedbackClient.GetFromJsonAsync<HashSet<Feedback>>("api/Feedback/get-all-feedbacks");
        loading = false;
    }
}
